% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/use_gact.R
\name{mapSetsDB}
\alias{mapSetsDB}
\title{#' @export
designMatrix <- function(sets=NULL, values=NULL, featureIDs=NULL, format="sparse") {
if(format=="sparse") {Compute design matrix for marker sets in sparse format

is <- qgg::mapSets(sets=sets, rsids=featureIDs, index=TRUE)
js <- rep(1:length(is),times=sapply(is,length))
W <- sparseMatrix(unlist(is),as.integer(js),x=rep(1,length(js)))
indx <- 1:max(sapply(is,max))
featureIDs <- featureIDs\link{indx}
colnames(W) <- names(is)
rownames(W) <- featureIDs
}
if(format=="dense") {
sets <- qgg:::mapSets(sets=sets,rsids=featureIDs, index=TRUE)
W <- matrix(0,nrow=length(featureIDs), ncol=length(sets))
for(i in 1:length(sets)) {
W[sets[\link{i}],i] <- 1
}
colnames(W) <- names(sets)
rownames(W) <- featureIDs
}
return(W)
}}
\usage{
mapSetsDB(sets = NULL, featureID = NULL, GAlist = NULL, index = TRUE)
}
\description{
#' @export
designMatrix <- function(sets=NULL, values=NULL, featureIDs=NULL, format="sparse") {
if(format=="sparse") {Compute design matrix for marker sets in sparse format

is <- qgg::mapSets(sets=sets, rsids=featureIDs, index=TRUE)
js <- rep(1:length(is),times=sapply(is,length))
W <- sparseMatrix(unlist(is),as.integer(js),x=rep(1,length(js)))
indx <- 1:max(sapply(is,max))
featureIDs <- featureIDs\link{indx}
colnames(W) <- names(is)
rownames(W) <- featureIDs
}
if(format=="dense") {
sets <- qgg:::mapSets(sets=sets,rsids=featureIDs, index=TRUE)
W <- matrix(0,nrow=length(featureIDs), ncol=length(sets))
for(i in 1:length(sets)) {
W[sets[\link{i}],i] <- 1
}
colnames(W) <- names(sets)
rownames(W) <- featureIDs
}
return(W)
}
}
